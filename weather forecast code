<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather Forecast</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: url('https://cdn.pixabay.com/photo/2022/08/31/03/24/smoke-7422330_1280.jpg') no-repeat center center fixed;
            background-size: cover;
            color: white;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }
        .container {
            text-align: center;
            background: rgba(0, 0, 0, 0.7); /* Slightly transparent background */
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 0 20px #ffffff80;
            width: 75%;
        }
        .search-box {
            margin-bottom: 20px;
        }
        #city {
            padding: 10px;
            border: 1px solid #ffffff;
            border-radius: 4px;
            background-color: #ffffff;
            color: white;
        }
        button {
            padding: 10px;
            background: #66b3ff;
            color: black;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-left: 10px;
        }
        button:hover {
            background: #007bff;
        }
        .weather-info {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
        }
        .weather-info .day {
            margin: 10px;
            padding: 10px;
            background: #000000;
            border: 1px solid #ffffff;
            border-radius: 12px;
            width: 150px;
            text-align: center;
            cursor: pointer;
            transition: transform 0.5s, background 0.5s;
            position: relative;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        }
        .weather-info .day .summary {
            display: block;
        }
        .weather-info .day .details {
            display: none;
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: #000000;
            color: white;
            padding: 10px;
            border-radius: 12px;
            box-sizing: border-box;
            text-align: center;
            font-size: 0.9em;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }
        .weather-info .day:hover .details {
            display: flex;
        }
        .weather-info .day:hover .summary {
            display: none;
        }
        .weather-info .day .summary img {
            width: 40px;
            height: 40px;
        }
        .main-weather {
            margin-bottom: 20px;
            text-align: center;
        }
        .main-weather img {
            width: 80px;
            height: 80px;
            vertical-align: middle;
        }
        .main-weather p {
            margin: 5px 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 id="forecast-heading">WEATHER FORECAST</h1>
        <div class="search-box" id="search-box">
            <input type="text" id="city" placeholder="Enter city name">
            <button onclick="getWeather()">Search</button>
        </div>
        <div id="main-weather" class="main-weather"></div>
        <div class="weather-info" id="weather-info">
            <!-- Weather data will be displayed here -->
        </div>
    </div>
    <script>
        const apiKey = '5c4170cf05b21adebb52da61301c97fd'; // Replace with your actual OpenWeatherMap API key

        async function getWeather() {
            const city = document.getElementById('city').value;
            if (!city) {
                alert('Please enter a city name');
                return;
            }

            const url = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`;
            try {
                const response = await fetch(url);
                const data = await response.json();

                if (data.cod !== '200') {
                    alert(data.message);
                    return;
                }

                document.getElementById('forecast-heading').style.display = 'none'; // Hide the heading
                document.getElementById('search-box').style.display = 'none'; // Hide the search box
                displayWeather(data);
            } catch (error) {
                alert('Failed to fetch weather data');
            }
        }

        function displayWeather(data) {
            const weatherInfoDiv = document.getElementById('weather-info');
            const mainWeatherDiv = document.getElementById('main-weather');
            weatherInfoDiv.innerHTML = '';
            mainWeatherDiv.innerHTML = '';

            const city = data.city.name;
            const country = data.city.country;
            const currentWeather = data.list[0];
            const mainTemp = Math.round(currentWeather.main.temp); // Rounded temperature
            const mainWeather = currentWeather.weather[0].main;
            const mainWeatherDescription = currentWeather.weather[0].description;
            const mainWeatherIcon = `https://openweathermap.org/img/wn/${currentWeather.weather[0].icon}.png`;
            const mainWindSpeed = currentWeather.wind.speed;
            const mainHumidity = currentWeather.main.humidity;
            const searchDateTime = new Date();
            const formattedDate = searchDateTime.toLocaleDateString(undefined, { weekday: 'short', day: 'numeric', month: 'short' });
            const formattedTime = searchDateTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });

            mainWeatherDiv.innerHTML = `
                <h2>${city}, ${country}</h2>
                <p><strong>${formattedDate} | ${formattedTime}</strong></p>
                <p><img src="${mainWeatherIcon}" alt="${mainWeather}"> <span><strong>${mainTemp}°C</strong></span></p>
                <p><strong>${mainWeatherDescription.charAt(0).toUpperCase() + mainWeatherDescription.slice(1)}</strong></p>                               
                <p><strong>Wind:</strong> ${mainWindSpeed} m/s</p>
                <p><strong>Humidity:</strong> ${mainHumidity}%</p>
            `;

            // Skip the current day and start displaying from the next day
            const today = new Date().setHours(0, 0, 0, 0);
            let startIndex = 0;
            for (let i = 0; i < data.list.length; i++) {
                const dayData = data.list[i];
                const date = new Date(dayData.dt * 1000).setHours(0, 0, 0, 0);
                if (date > today) {
                    startIndex = i;
                    break;
                }
            }

            for (let i = startIndex; i < data.list.length; i += 8) {
                const dayData = data.list[i];
                const date = new Date(dayData.dt * 1000).toLocaleDateString(undefined, { weekday: 'short', day: 'numeric', month: 'short' });
                const temp = Math.round(dayData.main.temp); // Rounded temperature
                const humidity = dayData.main.humidity;
                const windSpeed = dayData.wind.speed;
                const weatherDescription = dayData.weather[0].description;
                const weatherIcon = `https://openweathermap.org/img/wn/${dayData.weather[0].icon}.png`;

                const dayDiv = document.createElement('div');
                dayDiv.className = 'day';
                dayDiv.innerHTML = `
                    <div class="summary">
                        <span><strong>${date}</strong></span><br>
                        <img src="${weatherIcon}" alt="${weatherDescription}"><br>
                        <strong>${temp}°C</strong>
                    </div>
                    <div class="details">
                        <div><span>Humidity:</span> ${humidity}%</div>
                        <img src="${weatherIcon}" alt="${weatherDescription}"><br>
                        <div><span>Wind:</span> ${windSpeed} m/s</div>
                    </div>
                `;
                dayDiv.addEventListener('mouseover', () => {
                    dayDiv.querySelector('.details').style.display = 'flex';
                    dayDiv.querySelector('.summary').style.display = 'none';
                });
                dayDiv.addEventListener('mouseout', () => {
                    dayDiv.querySelector('.details').style.display = 'none';
                    dayDiv.querySelector('.summary').style.display = 'block';
                });
                weatherInfoDiv.appendChild(dayDiv);
            }
        }
    </script>
</body>
</html>
